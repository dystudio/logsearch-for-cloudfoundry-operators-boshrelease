if [@source][program] == "rep" or [@source][program] == "bbs" or [@source][program] == "route_emitter" {
  json {
    source => "[@message]"
    target => "parsed_json"
    add_tag => [ "diego/json" ]
  }

  if "_jsonparsefailure" not in [tags] {
    ruby {
      code => '
        timestamp = event["parsed_json"]["timestamp"]
        iso8601ns = timestamp.match(/T(\d\d:){2}\d{2}.\d{3}(\d+)/)
        if iso8601ns.nil?
          ns = timestamp[/\d{6}$/]
        else
          _, ns = iso8601ns.captures
        end
        event["@timestamp_ns"] = ns.to_i
      '
    }

    date {
      match => [ "[parsed_json][timestamp]", "UNIX", "ISO8601" ]
      remove_field => "[parsed_json][timestamp]"
    }

    mutate {
      rename => [ "[parsed_json][message]", "[@message]" ]
    }

    translate {
      field => "[parsed_json][level]"
      dictionary => {
        "0" => "DEBUG"
        "1" => "INFO"
        "2" => "ERROR"
        "3" => "FATAL"
        "DEBUG" => "DEBUG"
        "INFO" => "INFO"
        "ERROR" => "ERROR"
        "FATAL" => "FATAL"
      }
      destination => "[@level]"
      override => true
      fallback => "INFO"
      remove_field => "[parsed_json][level]"
    }

    translate {
      field => "[parsed_json][log_level]"
      dictionary => {
        "0" => "DEBUG"
        "1" => "INFO"
        "2" => "ERROR"
        "3" => "FATAL"
        "DEBUG" => "DEBUG"
        "INFO" => "INFO"
        "ERROR" => "ERROR"
        "FATAL" => "FATAL"
      }
      destination => "[@level]"
      override => false
      fallback => "INFO"
      remove_field => "[parsed_json][log_level]"
    }

    mutate {
      rename => { "[parsed_json]" => "%{[@source][program]}" }
    }
  } else {
    mutate {
      remove_tag => [ "_jsonparsefailure" ]
      add_tag => [ "diego/jsonparsefailure" ]
    }
  }
}
